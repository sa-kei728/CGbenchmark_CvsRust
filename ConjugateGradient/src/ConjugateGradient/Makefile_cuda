CC      = g++
CCFLAGS = -g -MMD -MP -O3 -Wall -I/usr/local/cuda/include -std=c++14 -fopenmp -m64
LDFLAGS = -lgomp -lcusparse -lcublas -lcudart -L/usr/local/cuda/lib64 -Xlinker -rpath -Xlinker /usr/local/cuda/lib64
LIBS    =
TARGET  = ./$(shell basename `readlink -f .`)
OBJDIR  = ./obj
ifeq "$(strip $(OBJDIR))" ""
	OBJDIR = .
endif
SOURCES  = $(wildcard *.cpp)
OBJECTS  = $(addprefix $(OBJDIR)/, $(SOURCES:.cpp=.cpp.o))
DEPENDS  = $(OBJECTS:.cpp.o=.d)

NVCC      = nvcc
NVCCFLAGS = -g -O3 -Xcompiler -Wall -std=c++11 -lineinfo -arch=compute_35 -code=sm_35 -m64
NVSOURCES = $(wildcard *.cu)
NVOBJECTS = $(addprefix $(OBJDIR)/, $(NVSOURCES:.cu=.cu.o))
NVDEPENDS = $(OBJECTS:.cu.o=.d)

$(TARGET): $(OBJECTS) $(NVOBJECTS) $(LIBS)
	$(NVCC) -o $@ $^ $(LDFLAGS)

$(OBJDIR)/%.cu.o: %.cu
	@[ -d $(OBJDIR) ] || mkdir -p $(OBJDIR)
	$(NVCC) $(NVCCFLAGS) -o $@ -c $<

$(OBJDIR)/%.cpp.o: %.cpp
	@[ -d $(OBJDIR) ] || mkdir -p $(OBJDIR)
	$(CC) $(CCFLAGS) -o $@ -c $<

all: clean $(TARGET)

clean:
	rm -f $(OBJECTS) $(DEPENDS) $(NVOBJECTS) $(NVDEPENDS) $(TARGET)
	@rmdir --ignore-fail-on-non-empty `readlink -f $(OBJDIR)`

-include $(DEPENDS)
#-include $(NVDEPENDS)
